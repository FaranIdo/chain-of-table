Accuracy: 0.8

-------------------

Sample ID: test-0
Table:
['game', 'date', 'opponent', 'result', 'wildcats points', 'opponents', 'record']
['1', 'sept 20', 'ole miss', 'loss', '7', '14', '0 - 1']
['2', 'sept 27', 'cincinnati', 'win', '20', '0', '1 - 1']
['3', 'oct 4', 'xavier', 'win', '20', '7', '2 - 1']
['4', 'oct 11', '9 georgia', 'win', '26', '0', '3 - 1 , 20']
['5', 'oct 18', '10 vanderbilt', 'win', '14', '0', '4 - 1 , 14']
['6', 'oct 25', 'michigan state', 'win', '7', '6', '5 - 1 , 13']
['7', 'nov 1', '18 alabama', 'loss', '0', '13', '5 - 2']
['8', 'nov 8', 'west virginia', 'win', '15', '6', '6 - 2']
['9', 'nov 15', 'evansville', 'win', '36', '0', '7 - 2']
['10', 'nov 22', 'tennessee', 'loss', '6', '13', '7 - 3']
Statement: the wildcats kept the opposing team scoreless in four games
Label: 1
Chain:
Operation: add_column
Parameters: [("('opponents score', ['14', '0', '7', '0', '0', '6', '13', '6', '0', '13'])", np.float64(1.0))]
Operation: select_row
Parameters: [("['2', '3', '4', '5', '9']", np.float64(2.625)), ("['2', '4', '5', '9']", np.float64(0.875)), ("['2', '3', '4', '9']", np.float64(0.625)), ("['2', '4', '5', '7']", np.float64(0.375))]
Operation: select_column
Parameters: [("['game', 'opponents', 'wildcats points']", np.float64(4.5))]
Operation: group_column
Parameters: []
Operation: sort_column
Parameters: [('opponents', 'small to large', 'Numerical', [0, 2, 3, 4, 1], 7.0, 0.0, np.float64(1.0))]

Sample ID: test-1
Table:
['game', 'date', 'opponent', 'result', 'wildcats points', 'opponents', 'record']
['1', 'sept 20', 'ole miss', 'loss', '7', '14', '0 - 1']
['2', 'sept 27', 'cincinnati', 'win', '20', '0', '1 - 1']
['3', 'oct 4', 'xavier', 'win', '20', '7', '2 - 1']
['4', 'oct 11', '9 georgia', 'win', '26', '0', '3 - 1 , 20']
['5', 'oct 18', '10 vanderbilt', 'win', '14', '0', '4 - 1 , 14']
['6', 'oct 25', 'michigan state', 'win', '7', '6', '5 - 1 , 13']
['7', 'nov 1', '18 alabama', 'loss', '0', '13', '5 - 2']
['8', 'nov 8', 'west virginia', 'win', '15', '6', '6 - 2']
['9', 'nov 15', 'evansville', 'win', '36', '0', '7 - 2']
['10', 'nov 22', 'tennessee', 'loss', '6', '13', '7 - 3']
Statement: the wildcats never scored more than 7 in any game they lost
Label: 1
Chain:
Operation: select_row
Parameters: [("['']", np.float64(2.125)), ("['1', '10', '7']", np.float64(1.375)), ("['1']", np.float64(1.0))]
Operation: select_column
Parameters: [("['result', 'wildcats points']", np.float64(3.75)), ("['game', 'result', 'wildcats points']", np.float64(0.75))]
Operation: group_column
Parameters: []
Operation: sort_column
Parameters: [('wildcats points', 'large to small', 'Numerical', [0, 2, 1], 7.0, 0.0, np.float64(1.0))]

Sample ID: test-2
Table:
['game', 'date', 'opponent', 'result', 'wildcats points', 'opponents', 'record']
['1', 'sept 20', 'ole miss', 'loss', '7', '14', '0 - 1']
['2', 'sept 27', 'cincinnati', 'win', '20', '0', '1 - 1']
['3', 'oct 4', 'xavier', 'win', '20', '7', '2 - 1']
['4', 'oct 11', '9 georgia', 'win', '26', '0', '3 - 1 , 20']
['5', 'oct 18', '10 vanderbilt', 'win', '14', '0', '4 - 1 , 14']
['6', 'oct 25', 'michigan state', 'win', '7', '6', '5 - 1 , 13']
['7', 'nov 1', '18 alabama', 'loss', '0', '13', '5 - 2']
['8', 'nov 8', 'west virginia', 'win', '15', '6', '6 - 2']
['9', 'nov 15', 'evansville', 'win', '36', '0', '7 - 2']
['10', 'nov 22', 'tennessee', 'loss', '6', '13', '7 - 3']
Statement: the wildcats lost one game in september and two games in november
Label: 1
Chain:
Operation: select_row
Parameters: [("['1', '10', '7']", np.float64(4.0)), ("['1', '7']", np.float64(0.5))]
Operation: select_column
Parameters: [("['date', 'result', 'wildcats points']", np.float64(2.375)), ("['date', 'result', 'team']", np.float64(1.25)), ("['date', 'result']", np.float64(0.75)), ("['date', 'game', 'result']", np.float64(0.12500000000000003))]
Operation: group_column
Parameters: []
Operation: sort_column
Parameters: []

Sample ID: test-3
Table:
['game', 'date', 'opponent', 'result', 'wildcats points', 'opponents', 'record']
['1', 'sept 20', 'ole miss', 'loss', '7', '14', '0 - 1']
['2', 'sept 27', 'cincinnati', 'win', '20', '0', '1 - 1']
['3', 'oct 4', 'xavier', 'win', '20', '7', '2 - 1']
['4', 'oct 11', '9 georgia', 'win', '26', '0', '3 - 1 , 20']
['5', 'oct 18', '10 vanderbilt', 'win', '14', '0', '4 - 1 , 14']
['6', 'oct 25', 'michigan state', 'win', '7', '6', '5 - 1 , 13']
['7', 'nov 1', '18 alabama', 'loss', '0', '13', '5 - 2']
['8', 'nov 8', 'west virginia', 'win', '15', '6', '6 - 2']
['9', 'nov 15', 'evansville', 'win', '36', '0', '7 - 2']
['10', 'nov 22', 'tennessee', 'loss', '6', '13', '7 - 3']
Statement: the wildcats played two games in september , four games in october , and four games in november
Label: 1
Chain:
Operation: select_row
Parameters: [("['1', '10', '2', '3', '7', '8', '9']", np.float64(3.75)), ("['1', '10', '2', '3', '4', '5', '6', '7', '8', '9']", np.float64(0.75))]
Operation: select_column
Parameters: [("['date', 'game']", np.float64(2.375)), ("['date', 'game', 'opponent']", np.float64(2.125))]
Operation: group_column
Parameters: []

Sample ID: test-4
Table:
['game', 'date', 'opponent', 'result', 'wildcats points', 'opponents', 'record']
['1', 'sept 20', 'ole miss', 'loss', '7', '14', '0 - 1']
['2', 'sept 27', 'cincinnati', 'win', '20', '0', '1 - 1']
['3', 'oct 4', 'xavier', 'win', '20', '7', '2 - 1']
['4', 'oct 11', '9 georgia', 'win', '26', '0', '3 - 1 , 20']
['5', 'oct 18', '10 vanderbilt', 'win', '14', '0', '4 - 1 , 14']
['6', 'oct 25', 'michigan state', 'win', '7', '6', '5 - 1 , 13']
['7', 'nov 1', '18 alabama', 'loss', '0', '13', '5 - 2']
['8', 'nov 8', 'west virginia', 'win', '15', '6', '6 - 2']
['9', 'nov 15', 'evansville', 'win', '36', '0', '7 - 2']
['10', 'nov 22', 'tennessee', 'loss', '6', '13', '7 - 3']
Statement: the most the wildcats outscored an opponent is by 36 points
Label: 1
Chain:
Operation: add_column
Parameters: []
Operation: select_row
Parameters: [("['*']", np.float64(3.625)), ("['9']", np.float64(0.875))]
Operation: select_column
Parameters: [("['opponents', 'wildcats points']", np.float64(3.25)), ("['wildcats points']", np.float64(1.25))]
Operation: sort_column
Parameters: []


-----------------------------------------

Question #0
If the table does not have the needed column to tell whether the statement is True or False, we use f_add_column() to add a new column for it. For example,
/*
col : rank | lane | player | time
row 1 :  | 5 | olga tereshkova (kaz) | 51.86
row 2 :  | 6 | manjeet kaur (ind) | 52.17
row 3 :  | 3 | asami tanno (jpn) | 53.04
*/
Statement: there are one athlete from japan.
Function: f_add_column(country of athlete)
Explanation: The statement is about the number of athletes from japan. We need to known the country of each athlete. There is no column of the country of athletes. We add a column "country of athlete".

If the table only needs a few rows to tell whether the statement is True or False, we use f_select_row() to select these rows for it. For example,
/*
table caption : jeep grand cherokee.
col : years | displacement | engine | power | torque
row 1 : 1999 - 2004 | 4.0l (242cid) | power tech i6 | - | 3000 rpm
row 2 : 1999 - 2004 | 4.7l (287cid) | powertech v8 | - | 3200 rpm
row 3 : 2002 - 2004 | 4.7l (287cid) | high output powertech v8 | - | -
row 4 : 1999 - 2001 | 3.1l diesel | 531 ohv diesel i5 | - | -
row 5 : 2002 - 2004 | 2.7l diesel | om647 diesel i5 | - | -
*/
Statement: the jeep grand cherokee with the om647 diesel i5 had the third lowest numbered displacement.
Function: f_select_row(row 1, row 4, row 5)
Explanation: The statement wants to check the om647 diesel i5 had third lowest numbered displacement. We need to know the first three low numbered displacement and all rows that power is om647 diesel i5. We select the row 1, row 4, row 5.

If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 3 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 4 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 5 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 6 : 6 | oct 25 | michigan state | win | 7 | 6 | 5 - 1 , 13
row 7 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 8 : 8 | nov 8 | west virginia | win | 15 | 6 | 6 - 2
row 9 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
row 10 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the wildcats kept the opposing team scoreless in four games
The next operation must be one of f_add_column() or f_select_row() or f_select_column() or f_group_column() or f_sort_column().
Function Chain: 
If the table only needs a few rows to tell whether the statement is True or False, we use f_select_row() to select these rows for it. For example,
/*
table caption : jeep grand cherokee.
col : years | displacement | engine | power | torque
row 1 : 1999 - 2004 | 4.0l (242cid) | power tech i6 | - | 3000 rpm
row 2 : 1999 - 2004 | 4.7l (287cid) | powertech v8 | - | 3200 rpm
row 3 : 2002 - 2004 | 4.7l (287cid) | high output powertech v8 | - | -
row 4 : 1999 - 2001 | 3.1l diesel | 531 ohv diesel i5 | - | -
row 5 : 2002 - 2004 | 2.7l diesel | om647 diesel i5 | - | -
*/
Statement: the jeep grand cherokee with the om647 diesel i5 had the third lowest numbered displacement.
Function: f_select_row(row 1, row 4, row 5)
Explanation: The statement wants to check the om647 diesel i5 had third lowest numbered displacement. We need to know the first three low numbered displacement and all rows that power is om647 diesel i5. We select the row 1, row 4, row 5.

If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 3 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 4 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 5 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 6 : 6 | oct 25 | michigan state | win | 7 | 6 | 5 - 1 , 13
row 7 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 8 : 8 | nov 8 | west virginia | win | 15 | 6 | 6 - 2
row 9 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
row 10 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the wildcats kept the opposing team scoreless in four games
The next operation must be one of f_select_row() or f_select_column() or f_group_column() or f_sort_column().
Function Chain: 
If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 2 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 3 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 4 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 5 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
*/
Statement: the wildcats kept the opposing team scoreless in four games
The next operation must be one of f_select_column() or f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3, row 4, row 5) ->
If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | wildcats points | opponents
row 1 : 2 | 20 | 0
row 2 : 3 | 20 | 7
row 3 : 4 | 26 | 0
row 4 : 5 | 14 | 0
row 5 : 9 | 36 | 0
*/
Statement: the wildcats kept the opposing team scoreless in four games
The next operation must be one of f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3, row 4, row 5) -> f_select_column(game, wildcats points, opponents) ->
If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | wildcats points | opponents
row 1 : 2 | 20 | 0
row 2 : 3 | 20 | 7
row 3 : 4 | 26 | 0
row 4 : 5 | 14 | 0
row 5 : 9 | 36 | 0
*/
Statement: the wildcats kept the opposing team scoreless in four games
The next operation must be one of f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3, row 4, row 5) -> f_select_column(game, wildcats points, opponents) ->
None
Question #1
If the table does not have the needed column to tell whether the statement is True or False, we use f_add_column() to add a new column for it. For example,
/*
col : rank | lane | player | time
row 1 :  | 5 | olga tereshkova (kaz) | 51.86
row 2 :  | 6 | manjeet kaur (ind) | 52.17
row 3 :  | 3 | asami tanno (jpn) | 53.04
*/
Statement: there are one athlete from japan.
Function: f_add_column(country of athlete)
Explanation: The statement is about the number of athletes from japan. We need to known the country of each athlete. There is no column of the country of athletes. We add a column "country of athlete".

If the table only needs a few rows to tell whether the statement is True or False, we use f_select_row() to select these rows for it. For example,
/*
table caption : jeep grand cherokee.
col : years | displacement | engine | power | torque
row 1 : 1999 - 2004 | 4.0l (242cid) | power tech i6 | - | 3000 rpm
row 2 : 1999 - 2004 | 4.7l (287cid) | powertech v8 | - | 3200 rpm
row 3 : 2002 - 2004 | 4.7l (287cid) | high output powertech v8 | - | -
row 4 : 1999 - 2001 | 3.1l diesel | 531 ohv diesel i5 | - | -
row 5 : 2002 - 2004 | 2.7l diesel | om647 diesel i5 | - | -
*/
Statement: the jeep grand cherokee with the om647 diesel i5 had the third lowest numbered displacement.
Function: f_select_row(row 1, row 4, row 5)
Explanation: The statement wants to check the om647 diesel i5 had third lowest numbered displacement. We need to know the first three low numbered displacement and all rows that power is om647 diesel i5. We select the row 1, row 4, row 5.

If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 3 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 4 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 5 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 6 : 6 | oct 25 | michigan state | win | 7 | 6 | 5 - 1 , 13
row 7 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 8 : 8 | nov 8 | west virginia | win | 15 | 6 | 6 - 2
row 9 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
row 10 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the wildcats never scored more than 7 in any game they lost
The next operation must be one of f_add_column() or f_select_row() or f_select_column() or f_group_column() or f_sort_column().
Function Chain: 
If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 3 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the wildcats never scored more than 7 in any game they lost
The next operation must be one of f_select_column() or f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3) ->
If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | result | wildcats points
row 1 : 1 | loss | 7
row 2 : 7 | loss | 0
row 3 : 10 | loss | 6
*/
Statement: the wildcats never scored more than 7 in any game they lost
The next operation must be one of f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3) -> f_select_column(game, result, wildcats points) ->
If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | result | wildcats points
row 1 : 1 | loss | 7
row 2 : 7 | loss | 0
row 3 : 10 | loss | 6
*/
Statement: the wildcats never scored more than 7 in any game they lost
The next operation must be one of f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3) -> f_select_column(game, result, wildcats points) ->
None
Question #2
If the table does not have the needed column to tell whether the statement is True or False, we use f_add_column() to add a new column for it. For example,
/*
col : rank | lane | player | time
row 1 :  | 5 | olga tereshkova (kaz) | 51.86
row 2 :  | 6 | manjeet kaur (ind) | 52.17
row 3 :  | 3 | asami tanno (jpn) | 53.04
*/
Statement: there are one athlete from japan.
Function: f_add_column(country of athlete)
Explanation: The statement is about the number of athletes from japan. We need to known the country of each athlete. There is no column of the country of athletes. We add a column "country of athlete".

If the table only needs a few rows to tell whether the statement is True or False, we use f_select_row() to select these rows for it. For example,
/*
table caption : jeep grand cherokee.
col : years | displacement | engine | power | torque
row 1 : 1999 - 2004 | 4.0l (242cid) | power tech i6 | - | 3000 rpm
row 2 : 1999 - 2004 | 4.7l (287cid) | powertech v8 | - | 3200 rpm
row 3 : 2002 - 2004 | 4.7l (287cid) | high output powertech v8 | - | -
row 4 : 1999 - 2001 | 3.1l diesel | 531 ohv diesel i5 | - | -
row 5 : 2002 - 2004 | 2.7l diesel | om647 diesel i5 | - | -
*/
Statement: the jeep grand cherokee with the om647 diesel i5 had the third lowest numbered displacement.
Function: f_select_row(row 1, row 4, row 5)
Explanation: The statement wants to check the om647 diesel i5 had third lowest numbered displacement. We need to know the first three low numbered displacement and all rows that power is om647 diesel i5. We select the row 1, row 4, row 5.

If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 3 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 4 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 5 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 6 : 6 | oct 25 | michigan state | win | 7 | 6 | 5 - 1 , 13
row 7 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 8 : 8 | nov 8 | west virginia | win | 15 | 6 | 6 - 2
row 9 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
row 10 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the wildcats lost one game in september and two games in november
The next operation must be one of f_add_column() or f_select_row() or f_select_column() or f_group_column() or f_sort_column().
Function Chain: 
If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 3 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the wildcats lost one game in september and two games in november
The next operation must be one of f_select_column() or f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3) ->
If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | result | wildcats points
row 1 : sept 20 | loss | 7
row 2 : nov 1 | loss | 0
row 3 : nov 22 | loss | 6
*/
Statement: the wildcats lost one game in september and two games in november
The next operation must be one of f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3) -> f_select_column(date, result, wildcats points) ->
If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | result | wildcats points
row 1 : sept 20 | loss | 7
row 2 : nov 1 | loss | 0
row 3 : nov 22 | loss | 6
*/
Statement: the wildcats lost one game in september and two games in november
The next operation must be one of f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3) -> f_select_column(date, result, wildcats points) ->
None
Question #3
If the table does not have the needed column to tell whether the statement is True or False, we use f_add_column() to add a new column for it. For example,
/*
col : rank | lane | player | time
row 1 :  | 5 | olga tereshkova (kaz) | 51.86
row 2 :  | 6 | manjeet kaur (ind) | 52.17
row 3 :  | 3 | asami tanno (jpn) | 53.04
*/
Statement: there are one athlete from japan.
Function: f_add_column(country of athlete)
Explanation: The statement is about the number of athletes from japan. We need to known the country of each athlete. There is no column of the country of athletes. We add a column "country of athlete".

If the table only needs a few rows to tell whether the statement is True or False, we use f_select_row() to select these rows for it. For example,
/*
table caption : jeep grand cherokee.
col : years | displacement | engine | power | torque
row 1 : 1999 - 2004 | 4.0l (242cid) | power tech i6 | - | 3000 rpm
row 2 : 1999 - 2004 | 4.7l (287cid) | powertech v8 | - | 3200 rpm
row 3 : 2002 - 2004 | 4.7l (287cid) | high output powertech v8 | - | -
row 4 : 1999 - 2001 | 3.1l diesel | 531 ohv diesel i5 | - | -
row 5 : 2002 - 2004 | 2.7l diesel | om647 diesel i5 | - | -
*/
Statement: the jeep grand cherokee with the om647 diesel i5 had the third lowest numbered displacement.
Function: f_select_row(row 1, row 4, row 5)
Explanation: The statement wants to check the om647 diesel i5 had third lowest numbered displacement. We need to know the first three low numbered displacement and all rows that power is om647 diesel i5. We select the row 1, row 4, row 5.

If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 3 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 4 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 5 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 6 : 6 | oct 25 | michigan state | win | 7 | 6 | 5 - 1 , 13
row 7 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 8 : 8 | nov 8 | west virginia | win | 15 | 6 | 6 - 2
row 9 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
row 10 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the wildcats played two games in september , four games in october , and four games in november
The next operation must be one of f_add_column() or f_select_row() or f_select_column() or f_group_column() or f_sort_column().
Function Chain: 
If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 3 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 4 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 5 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 6 : 6 | oct 25 | michigan state | win | 7 | 6 | 5 - 1 , 13
row 7 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 8 : 8 | nov 8 | west virginia | win | 15 | 6 | 6 - 2
row 9 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
row 10 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the wildcats played two games in september , four games in october , and four games in november
The next operation must be one of f_select_column() or f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 8, row 9, row 10) ->
If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent
row 1 : 1 | sept 20 | ole miss
row 2 : 2 | sept 27 | cincinnati
row 3 : 3 | oct 4 | xavier
row 4 : 4 | oct 11 | 9 georgia
row 5 : 5 | oct 18 | 10 vanderbilt
row 6 : 6 | oct 25 | michigan state
row 7 : 7 | nov 1 | 18 alabama
row 8 : 8 | nov 8 | west virginia
row 9 : 9 | nov 15 | evansville
row 10 : 10 | nov 22 | tennessee
*/
Statement: the wildcats played two games in september , four games in october , and four games in november
The next operation must be one of f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 8, row 9, row 10) -> f_select_column(game, date, opponent) ->
If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent
row 1 : 1 | sept 20 | ole miss
row 2 : 2 | sept 27 | cincinnati
row 3 : 3 | oct 4 | xavier
row 4 : 4 | oct 11 | 9 georgia
row 5 : 5 | oct 18 | 10 vanderbilt
row 6 : 6 | oct 25 | michigan state
row 7 : 7 | nov 1 | 18 alabama
row 8 : 8 | nov 8 | west virginia
row 9 : 9 | nov 15 | evansville
row 10 : 10 | nov 22 | tennessee
*/
Statement: the wildcats played two games in september , four games in october , and four games in november
The next operation must be one of f_sort_column() or <END>.
Function Chain: f_select_row(row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 8, row 9, row 10) -> f_select_column(game, date, opponent) ->
Question #4
If the table does not have the needed column to tell whether the statement is True or False, we use f_add_column() to add a new column for it. For example,
/*
col : rank | lane | player | time
row 1 :  | 5 | olga tereshkova (kaz) | 51.86
row 2 :  | 6 | manjeet kaur (ind) | 52.17
row 3 :  | 3 | asami tanno (jpn) | 53.04
*/
Statement: there are one athlete from japan.
Function: f_add_column(country of athlete)
Explanation: The statement is about the number of athletes from japan. We need to known the country of each athlete. There is no column of the country of athletes. We add a column "country of athlete".

If the table only needs a few rows to tell whether the statement is True or False, we use f_select_row() to select these rows for it. For example,
/*
table caption : jeep grand cherokee.
col : years | displacement | engine | power | torque
row 1 : 1999 - 2004 | 4.0l (242cid) | power tech i6 | - | 3000 rpm
row 2 : 1999 - 2004 | 4.7l (287cid) | powertech v8 | - | 3200 rpm
row 3 : 2002 - 2004 | 4.7l (287cid) | high output powertech v8 | - | -
row 4 : 1999 - 2001 | 3.1l diesel | 531 ohv diesel i5 | - | -
row 5 : 2002 - 2004 | 2.7l diesel | om647 diesel i5 | - | -
*/
Statement: the jeep grand cherokee with the om647 diesel i5 had the third lowest numbered displacement.
Function: f_select_row(row 1, row 4, row 5)
Explanation: The statement wants to check the om647 diesel i5 had third lowest numbered displacement. We need to know the first three low numbered displacement and all rows that power is om647 diesel i5. We select the row 1, row 4, row 5.

If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 3 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 4 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 5 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 6 : 6 | oct 25 | michigan state | win | 7 | 6 | 5 - 1 , 13
row 7 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 8 : 8 | nov 8 | west virginia | win | 15 | 6 | 6 - 2
row 9 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
row 10 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the most the wildcats outscored an opponent is by 36 points
The next operation must be one of f_add_column() or f_select_row() or f_select_column() or f_group_column() or f_sort_column().
Function Chain: 
If the table only needs a few rows to tell whether the statement is True or False, we use f_select_row() to select these rows for it. For example,
/*
table caption : jeep grand cherokee.
col : years | displacement | engine | power | torque
row 1 : 1999 - 2004 | 4.0l (242cid) | power tech i6 | - | 3000 rpm
row 2 : 1999 - 2004 | 4.7l (287cid) | powertech v8 | - | 3200 rpm
row 3 : 2002 - 2004 | 4.7l (287cid) | high output powertech v8 | - | -
row 4 : 1999 - 2001 | 3.1l diesel | 531 ohv diesel i5 | - | -
row 5 : 2002 - 2004 | 2.7l diesel | om647 diesel i5 | - | -
*/
Statement: the jeep grand cherokee with the om647 diesel i5 had the third lowest numbered displacement.
Function: f_select_row(row 1, row 4, row 5)
Explanation: The statement wants to check the om647 diesel i5 had third lowest numbered displacement. We need to know the first three low numbered displacement and all rows that power is om647 diesel i5. We select the row 1, row 4, row 5.

If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 3 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 4 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 5 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 6 : 6 | oct 25 | michigan state | win | 7 | 6 | 5 - 1 , 13
row 7 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 8 : 8 | nov 8 | west virginia | win | 15 | 6 | 6 - 2
row 9 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
row 10 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the most the wildcats outscored an opponent is by 36 points
The next operation must be one of f_select_row() or f_select_column() or f_group_column() or f_sort_column().
Function Chain: 
If the table only needs a few columns to tell whether the statement is True or False, we use f_select_column() to select these columns for it. For example,
/*
col : code | county | former province | area (km2) | population | capital
row 1 : 1 | mombasa | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | kilifi | coast | 12,245.9 | 1,109,735 | kilifi
*/
Statement: momasa is a county with population higher than 500000.
Function: f_select_column(county, population)
Explanation: The statement wants to check momasa county with population higher than 500000. We need to know the county and its population. We select the column "county" and column "population".

If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : game | date | opponent | result | wildcats points | opponents | record
row 1 : 1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
row 2 : 2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
row 3 : 3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
row 4 : 4 | oct 11 | 9 georgia | win | 26 | 0 | 3 - 1 , 20
row 5 : 5 | oct 18 | 10 vanderbilt | win | 14 | 0 | 4 - 1 , 14
row 6 : 6 | oct 25 | michigan state | win | 7 | 6 | 5 - 1 , 13
row 7 : 7 | nov 1 | 18 alabama | loss | 0 | 13 | 5 - 2
row 8 : 8 | nov 8 | west virginia | win | 15 | 6 | 6 - 2
row 9 : 9 | nov 15 | evansville | win | 36 | 0 | 7 - 2
row 10 : 10 | nov 22 | tennessee | loss | 6 | 13 | 7 - 3
*/
Statement: the most the wildcats outscored an opponent is by 36 points
The next operation must be one of f_select_column() or f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(*) ->
If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

If the statement is about the order of items in a column, we use f_sort_column() to sort the items. For example,
/*
col : position | club | played | points
row 1 : 1 | malaga cf | 42 | 79
row 10 : 10 | cp merida | 42 | 59
row 3 : 3 | cd numancia | 42 | 73
*/
Statement: cd numancia placed in the last position.
Function: f_sort_column(position)
Explanation: The statement wants to check about cd numancia in the last position. We need to know the order of position from last to front. We sort the rows according to column "position".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : wildcats points | opponents
row 1 : 7 | 14
row 2 : 20 | 0
row 3 : 20 | 7
row 4 : 26 | 0
row 5 : 14 | 0
row 6 : 7 | 6
row 7 : 0 | 13
row 8 : 15 | 6
row 9 : 36 | 0
row 10 : 6 | 13
*/
Statement: the most the wildcats outscored an opponent is by 36 points
The next operation must be one of f_group_column() or f_sort_column() or <END>.
Function Chain: f_select_row(*) -> f_select_column(wildcats points, opponents) ->
If the statement is about items with the same value and the number of these items, we use f_group_column() to group the items. For example,
/*
col : district | name | party | residence | first served
row 1 : district 1 | nelson albano | dem | vineland | 2006
row 2 : district 1 | robert andrzejczak | dem | middle twp. | 2013â€ 
row 3 : district 2 | john f. amodeo | rep | margate | 2008
*/
Statement: there are 5 districts are democratic
Function: f_group_column(party)
Explanation: The statement wants to check 5 districts are democratic. We need to know the number of dem in the table. We group the rows according to column "party".

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : date | division | league | regular season | playoffs | open cup | avg. attendance
row 1 : 2001/01/02 | 2 | usl a-league | 4th, western | quarterfinals | did not qualify | 7,169
row 2 : 2002/08/06 | 2 | usl a-league | 2nd, pacific | 1st round | did not qualify | 6,260
row 5 : 2005/03/24 | 2 | usl first division | 5th | quarterfinals | 4th round | 6,028
*/
Statement: 2005 is the last year where this team was a part of the usl a-league?
Function Chain: f_add_column(year) -> f_select_row(row 1, row 2) -> f_select_column(year, league) -> f_sort_column(year) -> <END>

*/
col : rank | lane | athlete | time
row 1 : 1 | 6 | manjeet kaur (ind) | 52.17
row 2 : 2 | 5 | olga tereshkova (kaz) | 51.86
row 3 : 3 | 4 | pinki pramanik (ind) | 53.06
*/
Statement: There are 10 athletes from India.
Function Chain: f_add_column(country of athletes) -> f_select_row(row 1, row 3) -> f_select_column(athlete, country of athletes) -> f_group_column(country of athletes) -> <END>

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27â€“21 | 1â€“0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37â€“3 | 2â€“0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33â€“29 | 3â€“0 | estadi olÃ­mpic de montjuÃ¯c | 17,503
*/
Statement: the competition with highest points scored is played on April 20.
Function Chain: f_add_column(points scored) -> f_select_row(*) -> f_select_column(when, points scored) -> f_sort_column(points scored) -> <END>

/*
col : iso/iec standard | status | wg
row 1 : iso/iec tr 19759 | published (2005) | 20
row 2 : iso/iec 15288 | published (2008) | 7
row 3 : iso/iec 12207 | published (2011) | 7
*/
Statement: 2 standards are published in 2011
Function Chain: f_add_column(year) -> f_select_row(row 3) -> f_select_column(year) -> f_group_column(year) -> <END>

Here are examples of using the operations to tell whether the statement is True or False.

/*
col : wildcats points | opponents
row 1 : 7 | 14
row 2 : 20 | 0
row 3 : 20 | 7
row 4 : 26 | 0
row 5 : 14 | 0
row 6 : 7 | 6
row 7 : 0 | 13
row 8 : 15 | 6
row 9 : 36 | 0
row 10 : 6 | 13
*/
Statement: the most the wildcats outscored an opponent is by 36 points
The next operation must be one of f_group_column() or <END>.
Function Chain: f_select_row(*) -> f_select_column(wildcats points, opponents) ->
